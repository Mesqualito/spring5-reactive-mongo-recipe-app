buildscript {
    ext {
        springBootVersion = '2.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 12

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.webjars:bootstrap:3.4.1')
    implementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    implementation('cz.jirutka.spring:embedmongo-spring:1.3.1')

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    testCompileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.junit.jupiter:junit-jupiter-engine')
    testCompileOnly('io.projectreactor:reactor-test')

    testAnnotationProcessor('org.projectlombok:lombok')

    // super-set, see: https://stackoverflow.com/a/44507716/7773582
    testRuntimeOnly('org.springframework.boot:spring-boot-devtools')
}

tasks.withType(Test) {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
}


// export test coverage
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
